name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      GOSS_FILES_STRATEGY: cp
      DOCKER_VERSION: 27.3.1

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker
        run: |
          curl -L -o "/tmp/docker-${DOCKER_VERSION}.tgz" "https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz" \
          && tar -xz -C /tmp -f "/tmp/docker-${DOCKER_VERSION}.tgz" \
          && sudo mv /tmp/docker/* /usr/bin \
          && docker --version

      - name: Lint Dockerfile
        run: docker run --rm -i hadolint/hadolint < Dockerfile

      - name: Build image
        run: docker build -t drevops/ci-runner:test-ci .

      - name: Show images information
        run: docker images

      - name: Install goss
        run: curl -fsSL https://goss.rocks/install | sh && goss --version

      - name: Test image
        run: dgoss run -i drevops/ci-runner:test-ci

      - name: Show versions
        run: ./versions.sh "drevops/ci-runner:test-ci"

      - name: Generate versions file
        run: ./versions.sh "drevops/ci-runner:test-ci" > versions.txt

      - name: Upload versions artifact
        uses: actions/upload-artifact@v4
        with:
          name: versions
          path: versions.txt

      - name: Format versions for PR comment
        if: github.event_name == 'pull_request'
        run: |
          {
            echo "## ðŸ“¦ Installed Packages"
            echo ""
            echo "<details>"
            echo "<summary>View installed package versions</summary>"
            echo ""
            echo '```'
            cat versions.txt
            echo '```'
            echo "</details>"
          } > pr_comment.md

      - name: Comment PR with versions
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: pr_comment.md

      - name: Find installed packages issue
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: find-issue
        run: |
          ISSUE_NUMBER=$(gh issue list --state open --search "ðŸ“¦ Installed packages" --json number --jq '.[0].number')
          echo "issue-number=${ISSUE_NUMBER}" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Format versions for issue comment
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          {
            echo "## ðŸ“¦ Installed Packages"
            echo ""
            echo "**Commit:** [\`${{ github.sha }}\`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})"
            echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            echo ""
            echo "<details>"
            echo "<summary>View installed package versions</summary>"
            echo ""
            echo '```'
            cat versions.txt
            echo '```'
            echo "</details>"
          } > issue_comment.md

      - name: Post versions to issue
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.find-issue.outputs.issue-number != ''
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ steps.find-issue.outputs.issue-number }}
          body-path: issue_comment.md
